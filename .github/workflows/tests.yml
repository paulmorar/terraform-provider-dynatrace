name: Tests
on:
  push:
    branches:
      - '**'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Check out source code
        uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false      
      - name: Build
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go build .
      - name: Test
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
        run: go test -v
      # - name: TestResourceAttributes
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/spans/resattr
      # - name: TestSyntheticLocations
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/synthetic/locations
      # - name: TestSpanContextPropagation
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/spans/ctxprop
      # - name: TestSpanCapture
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/spans/capture
      # - name: TestSpanEntryPoints
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/spans/entrypoints
      # - name: TestSLOs
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/slo
      # - name: TestApiTokens
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/apitokens
      # - name: TestK8sCredentials
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/credentials/k8s
      # - name: TestPFCCredentials
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/credentials/cloudfoundry
      # - name: TestAWSCredentials
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/credentials/aws
      # - name: TestAzureCredentials
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/credentials/azure
      # - name: TestManagementZonev2
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/v2mgmz
      # - name: TestManagementZones
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/mgmz
      # - name: TestAutoTags
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/autotags
      # - name: TestAlerting
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/alerting
      # - name: TestV2Alerting
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/v2alerting
      # - name: TestDashboards
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/dashboards
      # - name: TestJSONDashboards
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/jsondashboards
      # - name: TestMaintenance
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/maintenance
      # - name: TestV2Maintenance
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/v2maintenance
      # - name: TestRequestAttributes
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/requestattributes
      # - name: TestCustomServices
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/customservices
      # - name: TestNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications
      # - name: TestMetricEventsv2
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/v2metrics
      # - name: TestMetricEventAnomalies
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/metrics
      # - name: TestDiskEventAnomalies
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/disks
      # - name: TestApplicationAnomalies
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/applications
      # - name: TestDatabasesAnomalies
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/databases
      # - name: TestHostAnomalies
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/hosts
      # - name: TestServiceAnomalies
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/services
      # - name: TestCalculatedServiceMetrics
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/metrics/calculated/service
      # - name: TestServiceNaming
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/naming/services
      # - name: TestHostNaming
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/naming/hosts
      # - name: TestProcessNaming
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/naming/processgroups
      # - name: TestSyntheticMonitors
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/synthetic/monitors
      # - name: TestIBMMQQueueManagers
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/ibmmq/queuemanagers
      # - name: TestIBMMQFilters
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/ibmmq/filters
      # - name: TestIBMMQQueueSharingGroups
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/ibmmq/queuesharinggroups
      # - name: TestIBMMQIMSBridges
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/ibmmq/imsbridges
      # - name: TestFrequentIssues
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/anomalies/frequentissues
      # - name: TestAnsibleTowerNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/ansible
      # - name: TestEmailNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/email
      # - name: TestJiraNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/jira
      # - name: TestOpsGenieNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/opsgenie
      # - name: TestPagerDutyNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/pagerduty
      # - name: TestServiceNowNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/servicenow
      # - name: TestSlackNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/slack
      # - name: TestTrelloNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/trello
      # - name: TestVictorOpsNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/victorops
      # - name: TestWebHookNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/webhook
      # - name: TestXMattersNotifications
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/notifications/xmatters
      # - name: TestIAMGroups
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #     IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
      #     IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
      #     IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/iam/groups
      # - name: TestIAMUsers
      #   env:
      #     GOPROXY: "https://proxy.golang.org"
      #     TF_ACC: true
      #     DYNATRACE_DEBUG: true
      #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #     IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
      #     IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
      #     IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
      #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/iam/users
      # # - name: TestWebApplications
      # #   env:
      # #     GOPROXY: "https://proxy.golang.org"
      # #     TF_ACC: true
      # #     DYNATRACE_DEBUG: true
      # #     DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
      # #     DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      # #   run: go test -v github.com/dynatrace-oss/terraform-provider-dynatrace/resources/applications/web